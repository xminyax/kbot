image: golang:latest

.go-cache:
    variables:
        GOPATH: $CI_PROJECT_DIR/.go
    cache:
      paths:
        - .go/pkg/mod/

variables:
  OUTPUT_NAME: __bin__/$CI_PROJECT_NAME
  ARCH: amd64
  OS: linux
  CGO_ENABLED: 0
  VERSION: git describe --tags --abbrev=0- git rev-parse --short HEAD

stages:
  - test
  - build
  - build&push

test:
  stage: test
  script:
    - make test

build:
  stage: build
  script:
    - mkdir -p $OUTPUT_NAME
    - make build ARCH=$ARCH
  artifacts:
    paths:
      - $OUTPUT_NAME

build_image:
  image: docker:stable
  stage: build&push
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
